Опис зі створення файлів (для узгодження файлів) для додатка Bank App:

1. AuthContext.Provider value={authContextData}  Створюємо контекст у файлі AuthContext, в якому будемо тримати дані аутентифікації.
В контексті буде знаходитись: створений state через useReducer, у якому буде знаходитись властивість token та об'єкт user dispatch функція, яка буде мати наступні типи дій: увійти в акаунт, вийти з акаунту
Також тут повинні зберігатися створені користувачі.

2. AuthRoute це компонент, який перевіряє, чи є в контексті аутентифікації токен, якщо так, то переводить на сторінку /balance.
         
3. WellcomePage На цій сторінці ми створюємо верстку та розміщуємо дві кнопки-посилання на сторінку /signup та сторінку /signin.
             
4. SignupPage На цій сторінці створюємо форму, яка відправляє запит на реєстрацію користувача (поля email та password, кнопка "Продовжити") та переводить на сторінку /signup-comfirm. Після реєстрації потрібно зберегти дані аутентифікації в контекст.
       
5. SignupConfirmPage На цій сторінці вводимо код підтвердження реєстрації акаунта (поле confirm, кнопка "Confirm") та після успішного запиту переводимо на сторінку /balance. Перевіряємо в контексті аутентифікації чи user.confirm. Якщо так, то переводимо на сторінку /balance.
На сторінці /signup-confirm використовуємо PrivateRoute, адже підтвердити акаунт може користувач, який вже увійшов в акаунт. Після підтвердження акаунту потрібно оновити дані аутентифікації в контексті.

6. SigninPage Вхід в акаунт. Зберігаємо дані аутентифікації в контекст. Якщо user.confirm є false, то перенаправляємо на /signup-confirm (RecoveryPage).
На цій сторінці створюємо форму (поля email та password, текст: "Чи маєте акаунт? Увійдіть(посилання на /signin)" кнопка "Continue").

7. RecoveryPage Сторінка відновлення акаунту. Після вводу пошти, створюється код з підтвердженням відновлення акаунту, переводимо на сторінку /recovery-confirm (RecoveryConfirmPage) кнопка "Send code".
             
8. RecoveryConfirmPage Сторінка підтвердження відновлення та оновлення пароля.  Після відправки форми потрібно перевести на сторінку /balance кнопка "Restore password".
              
9. PrivateRoute Приватний роут, який перевіряє наявність токена в контексті аутентифікації. Будь-який запит, який відправляється в сторінках під приватним роутом повинні передавати токен (будь-яким варіантом) на сервер для перевірки токена та отримання інформації що за користувач відправляє дані та передати конкретно його дані.
PrivateRoute не повинен блокувати зміст сторінок, які в нього огорнуті, а тільки приватні дані як логін, пароль, перевірочний код.

10. BalancePage  На цій сторінці повинно бути: 
a. Вгорі зліва - іконка з посиланням на SettingsPage (/settings), справа - іконка з посиланням на NotificationsPage (/notifications); 
b. Заголовок "Main wallet" 
c. Баланс (стартовий баланс $100), який повинен змінюватись залежно від проведених транзакцій, збільшення при отриманні (на сторінці receivePage (/receive)) та зменшенні при відправленні (на сторінці SendPage (/send))
d. Дві іконки receivePage, яка веде на (/receive) та SendPage, яка веде на(/send) 
e. Список транзакцій, який складається з іконки користувача, імені користувача з часом та напрямком транзакції та сумою транзакції з відповідним знаком "+" чи "-", при натисканні на кожну із яких відбувається перехід на сторінку TransactionPage.

11. NotificationsPage Сторінка списку нотифікацій, який створюються при діях:
Вхід в акаунт
Вихід з акаунту
Відновлення акаунту
Зміна пароля
Зміна пошти
Поповнення (ім'я користувача, сума, дата)
Переказ (ім'я користувача, сума, дата)
Один блок - одна подія, повинен складатись з назви події, дати та часу.
При переповненні подіями сторінки повинна з'явитися прокрутка.
На сторінці вгорі зліва повинна бути стрілка "назад" для повернення на попередню сторінку.

12. SettingsPage Сторінка налаштувань, на якій можна:
Перший блок: Змінити пошту (поле нового імейла, поле старого паролю, кнопка "Save Email")
Другий блок: Змінити пароль (поле старого паролю імейла, поле нового паролю, кнопка "Save Password")
В полях пароля повинна бути можливість підглянути пароль.
Кнопка "Log out" стиль .settings-button
Кожна дія повинна в кінці оновлювати контекст аутентифікації.
На сторінці вгорі зліва повинна бути стрілка "назад" для повернення на попередню сторінку.
Після кожної дії повинна з'являтися нова нотифікація (на сторінці NotificationsPage)
              
13. receivePage Сторінка поповнення балансу. Користувач вводить суму, натискає на платіжний метод (створити кнопки методів Stripe та Coinbase) і відправляється запит. Після чого створюється нова транзакція та нова нотифікація (на сторінці NotificationsPage). Після створення транзакції відбувається перехід на сторінку BalancePage.
На цій сторінці відбувається подвійний запит на оновлення "[Violation] 'click' handler took 1337ms", якщо можливо, то прибери це подвоєння.
      
14. SendPage Сторінка відправлення коштів. Користувач вводить пошту отримувача та суму та відправляє кнопкою "Send", стиль .register-button. Після чого у користувача, який відправив суму, створюється транзакція на списання грошей та нотифікація (на сторінці NotificationsPage), а у користувача, який отримав гроші, створюється транзакція (на сторінці BalancePage) на отримання грошей та нотифікація (на сторінці NotificationsPage).
Після створення транзакції відбувається перехід на сторінку BalancePage. На цій сторінці відбувається подвійний запит на оновлення "[Violation] 'submit' handler took 2824ms", якщо можливо, то прибери це подвоєння.
       
15. TransactionPage Сторінка з детальною інформацією про кожну конкретну транзакцію. В сторінці є trainsactionId, який вказує на ідентифікатор транзакції, який використовується для отримання та виводи інформації про конкретну транзакцію. Перехід на цю сторінку здійснюється через натискання на карточку транзакції на сторінці /balance
На цій сторінці повинно бути три поля: дата і час транзакції, ім'я користувача, тип транзакції.
На сторінці вгорі зліва повинна бути стрілка "назад" для повернення на попередню сторінку.  

16. transactions - компонент, який відповідає за створення унікальних транзакцій. 

17. DeleteAccountPage сторінка видалення акаунту користувача, path="/delete-account"