Перевірка всерсій:
npm -v
node -v

Список віддалених репозиторіїв
git remote -v
Ця команда покаже список усіх віддалених репозиторіїв, пов'язаних з вашим локальним репозиторієм, включно з Heroku.

Детальна інформація про віддалений репозиторій Heroku
git remote show heroku
Ця команда відобразить детальну інформацію про віддалений репозиторій з назвою "heroku", включаючи URL-адресу для читання та запису, а також гілки, які відстежуються.

Перевірити гілку, яка відстежується для Heroku
git rev-parse --abbrev-ref --symbolic-full-name @{u}
Виконайте цю команду в кореневій директорії вашого репозиторію. Вона покаже гілку, яка відстежується для віддаленого репозиторію Heroku.

клонувати новий віддалений репозиторій Heroku за допомогою URL, який було надано у виводі команди heroku create:
git clone https://git.heroku.com/bank-app-itbrains.git
Це створить нову папку bank-app-itbrains з копією віддаленого репозиторію Heroku.

Оновлення залежностей: Щоб уникнути проблем з відсутністю модулів, переконайтеся, що у вас встановлені оновлені версії react та react-dom.

Встановіть оновлені версії пакетів за допомогою наступних команд:
npm install react@latest
npm install react-dom@latest

Встановлення Swal: Відкрийте термінал у вашому проекті (у VSCode або будь-якому іншому терміналі) і введіть команду:
npm install sweetalert2

Зафіксувати зміни у локальному репозиторії
git add .
git commit -m "Готово до розгортання на Heroku"

Відправити код на Heroku
git push heroku main
Замініть main на назву вашої гілки, якщо ви використовуєте іншу (наприклад, master).

Відкрити додаток у браузері (опціонально)
heroku open
