// 12.07.24 //
File PullToRefresh Поки не працює оновлення сторінки.
Зазаз головне завдання адаптувати головну сторіну під додаток ReactJS, а потім під сторінку у браузері.
Статусбар змінює колір, нижній блок навігації - ні! Поки у цьому стані залишаємо.

// 14.07.24 //
Завершено оформлення стилів та дизайну головної сторінки. 
Адаптуємо під головну сторінку інщі стилі.

// 20.07.24 //
admin не бачить  транзакцій інший користувачив у нотифікаціях.

// 25.07.24 //
Доопрацювати відміну транзакцій  через відведений час.

// 26.07.24 //
1.Завдання: (покищо відкладаємо)
При створення нового акаунта додати ім'я користувача як неповторний нікнейм.
Прив'язати транзакції до ідентифікатора користувача, а не до імейлу, щоб при зміні імейлу не втрачався зв'язок з транзакціями.

2.У нас є вже повністю працюючій додаток на React. Він розгорнутий через Гіт на heroku.com. Але віддалені користувачі можуть створювати акаунти тільки у себе на мобільних пристроях і не можуть взаємодіяти між собою на різних пристроях. Як це виправити? (Поки відкладений)

// 27.07.24 //
Вдосконалити систему приховування вводу пароля.
Пропозиція для майбутнього втілення:
Для поля вводу пароля найоптимальнішими є наступні параметри:

1. **Довжина пароля**:
   - Мінімум 8 символів.
   - Рекомендовано від 12 до 16 символів.

2. **Комбінація символів**:
   - Обов’язково змішувати великі та малі літери.
   - Додавати цифри.
   - Використовувати спеціальні символи (напр., !, @, #, $, %, ^, &, *).

3. **Перевірка сили пароля**:
   - Вбудований індикатор сили пароля, що показує користувачеві наскільки надійний пароль він обрав.

4. **Підтвердження пароля**:
   - Обов’язкове введення пароля двічі для підтвердження.

5. **Обмеження на повторюваність символів**:
   - Уникати надмірної кількості однакових символів підряд.

6. **Відсутність очевидних паролів**:
   - Заборона найпоширеніших паролів (напр., password, 123456).

7. **Блокування раніше використаних паролів**:
   - Неможливість використання кількох останніх паролів при зміні.

8. **Затримка між спробами**:
   - Затримка або CAPTCHA після кількох невдалих спроб входу.

9. **Маскування пароля**:
   - При введенні пароля символи повинні бути замасковані для захисту від сторонніх очей.

10. **Відображення умов роботи**:
    - Ознайомлення користувача з вимогами до пароля (бажано до початку введення).

(Забезпечення таких параметрів допоможе підвищити безпеку та зручність користування для користувачів.)  

Зробити оптимізацію коду файлів стилів.
Пропозиція:
 Мінімізація CSS полягає у зменшенні розміру стилів за рахунок видалення зайвого пробілу, коментарів та інших надлишкових символів без зміни їх функціоналу. Це дозволяє зменшити завантажуваний обсяг CSS файлу і прискорити завантаження сторінки.

Використання CSS препроцесорів, таких як Sass, Less або Stylus, дозволяє писати CSS з використанням додаткових функцій і можливостей, які спрощують розробку і підтримку стилів. Наприклад, вони підтримують змінні, вкладеність, міксіни, умовні конструкції та інші корисні функції, які допомагають в створенні більш організованих та перевикористовуваних стилів.

Після написання стилів у препроцесорі їх можна скомпілювати у звичайний CSS файл. Під час компіляції можна використовувати різні опції, наприклад, мінімізацію стилів, автоматичну пристосовування вендорних префіксів та інше.

Отже, використання мінімізації CSS та CSS препроцесорів може значно полегшити процес розробки та підтримки стилів, а також зменшити обсяг файлів і покращити продуктивність веб-сайту.  

// 29.07.24 //
Сторінка UsersPage доступна тількі в акаунті з правами адміністратора. Вона має два посилання: на сторінку UserTransactionsPage та сторінку Файл UserNotificationsPage. 
Сторінка UserTransactionsPage повинна показувати транзакції поточного корисувача від імені адміністратора. Наразі вона показує тільки транзакції, пов'язані з адміністратором. 
Сторінк UserNotificationsPage повинна показувати події транзакцій та загальні події пов'язані з поточним користувачем, а вона показує події транзакцій адміністратора, а загальні події показує всіх користувачів.
Код яких ще сторінок тобі допоможе знайти ви виправити проблему? Не починай вирішувати проблему доки я тобі не скину всі файли.

// 30.07.24 //

Фільтрація транзакцій на сторінці UserTransactionsPage повинна бути такою як на сторінці TransactionList.js. На цей час відображуються тільки транзакції поточного користувача, пов'язані з адміном, а повинно відображуватись всі транзакції, пов'язані з поточним користувачем.

Фільтрація транзакцій на сторінці UserTransactionsPage повинна бути такою як на сторінці UserNotificationsPage та показувати транзакції, пов'язані з поточним користувачем. На цей час відображуються тільки транзакції поточного користувача, пов'язані з адміном, а повинно відображуватись всі транзакції, пов'язані тільки з поточним користувачем.

// 31.07.24 //

useEffect(() => {
    setTransactions(propTransactions);
  }, [propTransactions, user]);

 Вирішуєм!!!

// 02.08.24 //
Завершити з фільтрацією нотифікацій в UserNotificationsPage
